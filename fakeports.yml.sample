# Connection information
# host: [ listenning host/ip ]
# port: [ listenning port ]
connection:
  host: 0.0.0.0
  port: 4444

# General settings
general:
  debug: true
  bytes_before_answer: 1 # The max number of bytes to read before answering with signature
  log: '/var/log/fakeports.log'

# Signatures:
# Available signature types: simple, regex, match
# simple: specify port and signature/payload to send once a client connects to that port
# regex: Send a regular expression signature (identical to nmap signatures). If no arguments are given for values in
#       the signature (eg: Payload: \d) then a random value will be generated. You can specify values using the `args`
#       array parameter
# match: Wait for the client to send a probe then if the python regex specified in the `regex` field matches then send
#        the given payload. Note that \1, \2, \3, etc print matched groups to the payload
#
# Signatures Guide:
#
# 1. ** WARNING: ensure that all regex payloads are enclosed in single quotes (') and NOT in double quotes (") **
# 2. It is best that you simplify signatures, especially groups enclosed in brackets (), for example:
#   Example 1:
#     Original Signature: '^HTTP/1\.1 400 .*\r\nServer: Microsoft-IIS/(\d[-.\w]+)\r\n'
#     Simplified:         '^HTTP/1\.1 400 .*\r\nServer: Microsoft-IIS/(\d)\r\n'
#     Notes: This signature matches IIS version inside the brackets, however the script will attempt to also generate
#             additional characters including "-" "." or any word randomly. It is best that you remove them and specify
#             \d or \w which gets replaced by the argument.
#   Example 2:
#     Original Signature: '\x07version\x04bind.*[\x03-\x14]([\w._ ]{3,20})'
#     Simplified:         '\x07version\x04bind.*[\x03-\x14](\w)'
# 3. Under the context of this application \d and \w are replaced by the argument send to the regex type signature.
#     The type of the argument is irrelevant to the group specified by the \d (digit) or \w (word) arguments

signatures_tcp:
  80:
      type: 'regex'
      payload: '^HTTP/1\.1 400 .*\r\nServer: Microsoft-IIS/(\d)\r\n'
      args: ["6.1"]

  1111:
      type: 'simple'
      bytes_before_answer: 0
      payload: !!binary "//sD//sBDQpQYXNzd29yZDog" #Netgear broadband router Voip telnetd
  81:
      type: 'simple'
      bytes_before_answer: 0
      payload: "SSH-2.0-Cisco-9.0\r\n"
  5:
      type: 'simple'
      bytes_before_answer: 0
      payload: !!binary "//sB//sD//0Y//0f" #cisco router telnetd
  99:
      type: "simple"
      bytes_before_answer: 0
      payload: !!binary "LgAAAP8uLkhvc3QgMTI3LjAuMC4xIGlzIG5vdCBhbGxvd2VkIHRvIGNvbm5lY3QgdG8gdGhpcyBNeVNRTCBzZXJ2ZXI=" #mysql
  79:
      type: "simple"
      bytes_before_answer: 0
      payload: "200 NNTP Service 1.2 Version: 1.2 Posting Allowed \r\n"
#  8:
#      type: "simple"
#      payload: "HTTP/1.1 404 Not Found\r\n\
#                Server: SQLAnywhere/3.1\r\n"
  10:
      type: "simple"
      payload: "* OK 3.5 Cyrus IMAP4 v3.5-Red Hat hacker-version server ready\r\n"

  21:
      type: "simple"
      payload: "220 BetaFTPD 9.1 ready.\r\n"
  64:
      type: "simple"
      payload: "* OK Gimap ready for requests from 127.0.0.1 3"
  137:
      type: 'simple'
      payload: "OpenLDAP Finger Service...\r\n"
  222:
      type: 'simple'
      payload: "SSH-2.0-OpenSSH_5.1 Ubuntu-ubuntu1.1\r\n"

  81:
    type: 'match'
    regex: '(TRACE|PUT|DELETE|GET|POST) (.*?) HTTP/\d.\d\r\n[0-9].*'
    onmatch:
      type: 'simple'
      payload: "HTTP/1.1 404 Not Found\r\n\
                Date: Mon, 27 Mar 2017 13:00:00 GMT\r\n\
                Server: Apache/1.3.16 (CentOS)\r\n\
                Content-Length: 277\r\n\
                Keep-Alive: timeout=5, max=100\r\n\
                Connection: Keep-Alive\r\n\
                Content-Type: text/html; charset=iso-8859-1\r\n\r\n\
                <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n\
                <html><head>\n\
                <title>404 Not Found</title>\n\
                </head><body>\n\
                <h1>Not Found</h1>\n\
                <p>The requested URL / was not found on this server.</p>\n\
                <hr>\n\
                <address>Apache/1.3.16 (CentOS) Server at 192.168.125.110 Port 81</address>\n\
                </body></html>"
    onfail:
      type: "simple"
      payload: "HTTP/1.1 400 Bad Request\r\n\
                Date: Mon, 27 Mar 2017 13:00:00 GMT\r\n\
                Server: Apache/1.3.16 (CentOS)\r\n\
                Content-Length: 309\r\n\
                Connection: close\r\n\
                Content-Type: text/html; charset=iso-8859-1\r\n\r\n\
                <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n\
                <html><head>\n\
                <title>400 Bad Request</title>\n\
                </head><body>\n\
                <h1>Bad Request</h1>\n\
                <p>Your browser sent a request that this server could not understand.<br />\n\
                </p>\n\
                <hr>\n\
                <address>Apache/1.3.16 (CentOS) Server at 192.168.125.110 Port 81</address>\n\
                </body></html>"
#  139:
#      type: "simple"
#      payload: "HTTP/1.1 404 Not Found\r\n\
#                Date: Mon, 1 Jan 2017 13:00:00 GMT\r\n\
#                Server: SAMBAR 1.9\r\n"
#  1000:
#      type: "simple"
#      bytes_before_answer: 0
#      payload: !!binary "Q2hlY2sgUG9pbnQgRmlyZVdhbGwtMSBDbGllbnQgQXV0aGVudGljYXRpb24gU2VydmVyIHJ1bm5pbmcgb24gMTI3LjAuMC4xDQoN//sB//4B//sDVXNlcjog" # checkpoint firewall client auth server
#  2121:
#      type: 'simple'
#      payload: '220 ProFTPD 3.1 Server\r\n'
#  113:
#      type: "regex"
#      payload: '^0, 0 : ERROR : UNKNOWN-ERROR$'
#  4444:
#      type: 'regex'
#      payload: '^HTTP/1\.1 400 .*\r\nServer: Microsoft-IIS/(\d)\r\n'
#      args: [6]
  115:
      type: "match"
      regex: '(TRACE|PUT|DELETE) (.*?) HTTP/\d.\d\r\n[0-9].*'
      onmatch:
        type: "regex"
        payload: '^HTTP/1\.1 400 .*\r\nServer: Microsoft-IIS/(\d)\r\n'
        args: ["6.0"]
      onfail:
        type: "simple"
        payload: 'HTTP/1.0 400 Bad Request\r\nContent-Type: text/html; charset=UTF-8\r\n\r\n'

#signatures_udp:
#  53:
#    type: "regex"
#    payload: '\x07version\x04bind.*[\x03-\x14](\w)'
#    args: ["9.8"]